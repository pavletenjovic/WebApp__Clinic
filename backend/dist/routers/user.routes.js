"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const user_controller_1 = require("../controllers/user.controller");
const userRouter = express_1.default.Router();
userRouter.route('/login').post((req, res) => new user_controller_1.UserController().login(req, res));
userRouter.route('/getAllUsers').get((req, res) => new user_controller_1.UserController().getAllUsers(req, res));
userRouter.route('/register').post((req, res) => new user_controller_1.UserController().register(req, res));
userRouter.route('/registerDoctor').post((req, res) => new user_controller_1.UserController().registerDoctor(req, res));
userRouter.route('/getAllDoctors').get((req, res) => new user_controller_1.UserController().getAllDoctors(req, res));
userRouter.route('/deleteUser').post((req, res) => new user_controller_1.UserController().deleteUser(req, res));
userRouter.route('/getAllPendingUsers').get((req, res) => new user_controller_1.UserController().getAllPendingUsers(req, res));
userRouter.route('/getAllDeniedUsers').get((req, res) => new user_controller_1.UserController().getAllDeniedUsers(req, res));
userRouter.route('/getAllSpecializations').get((req, res) => new user_controller_1.UserController().getAllSpecializations(req, res));
userRouter.route('/acceptUser').post((req, res) => new user_controller_1.UserController().acceptUser(req, res));
userRouter.route('/denyUser').post((req, res) => new user_controller_1.UserController().denyUser(req, res));
userRouter.route('/getUserByUsername').post((req, res) => new user_controller_1.UserController().getUserByUsername(req, res));
userRouter.route('/updateInfo').post((req, res) => new user_controller_1.UserController().updateInfo(req, res));
userRouter.route('/updateInfo2').post((req, res) => new user_controller_1.UserController().updateInfo2(req, res));
userRouter.route('/getAppointmentsBySpecialization').post((req, res) => new user_controller_1.UserController().getAppointmentsBySpecialization(req, res));
userRouter.route('/getAppointmentsByName').post((req, res) => new user_controller_1.UserController().getAppointmentsByName(req, res));
userRouter.route('/addRequest').post((req, res) => new user_controller_1.UserController().addRequest(req, res));
userRouter.route('/addSpecialization').post((req, res) => new user_controller_1.UserController().addSpecialization(req, res));
userRouter.route('/getAllPendingAppointments').get((req, res) => new user_controller_1.UserController().getAllPendingAppointments(req, res));
userRouter.route('/getAllAppointments').get((req, res) => new user_controller_1.UserController().getAllAppointments(req, res));
userRouter.route('/getAllPregledi').get((req, res) => new user_controller_1.UserController().getAllPregledi(req, res));
userRouter.route('/acceptPA').post((req, res) => new user_controller_1.UserController().acceptPA(req, res));
userRouter.route('/declinePA').post((req, res) => new user_controller_1.UserController().declinePA(req, res));
userRouter.route('/updatePA').post((req, res) => new user_controller_1.UserController().updatePA(req, res));
userRouter.route('/addPregled').post((req, res) => new user_controller_1.UserController().addPregled(req, res));
userRouter.route('/deletePA').post((req, res) => new user_controller_1.UserController().deletePA(req, res));
userRouter.route('/getAllPreglediPacient').post((req, res) => new user_controller_1.UserController().getAllPreglediPacient(req, res));
userRouter.route('/getAllPreglediDoctor').post((req, res) => new user_controller_1.UserController().getAllPreglediDoctor(req, res));
userRouter.route('/cancelPregled').post((req, res) => new user_controller_1.UserController().cancelPregled(req, res));
userRouter.route('/getReportPacient').post((req, res) => new user_controller_1.UserController().getReportPacient(req, res));
userRouter.route('/addReport').post((req, res) => new user_controller_1.UserController().addReport(req, res));
exports.default = userRouter;
//# sourceMappingURL=user.routes.js.map